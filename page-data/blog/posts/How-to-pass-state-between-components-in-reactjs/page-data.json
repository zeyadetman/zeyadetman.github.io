{"componentChunkName":"component---src-templates-blogtemplate-js","path":"/blog/posts/How-to-pass-state-between-components-in-reactjs/","result":{"data":{"markdownRemark":{"html":"<p>In this post, i'll explain how to pass a state between components in Reactjs.\nWe'll build a small 'How many books did you read?' app, in this application, we\nhave two main components one big called 'Library' and another small 'Book', we have 3 books in the library state and each book has its own state. check any book to count as read. <a href=\"https://zeyadetman.github.io/howmanybooks/\">try the app here</a></p>\n<p><strong>Let's begin with code:</strong></p>\n<h2>Passing state from parent to child</h2>\n<p>In our Library component we have this state</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  reads<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  books<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"Zero to one\"</span><span class=\"token punctuation\">,</span>\n      isbn<span class=\"token operator\">:</span> <span class=\"token string\">\"9780804139298\"</span><span class=\"token punctuation\">,</span>\n      author<span class=\"token operator\">:</span> <span class=\"token string\">\"Peter Thiel\"</span><span class=\"token punctuation\">,</span>\n      cover<span class=\"token operator\">:</span> <span class=\"token string\">\"https://images.gr-assets.com/books/1414347376l/18050143.jpg\"</span><span class=\"token punctuation\">,</span>\n      status<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"The Manager's Path\"</span><span class=\"token punctuation\">,</span>\n      isbn<span class=\"token operator\">:</span> <span class=\"token string\">\"9781491973899\"</span><span class=\"token punctuation\">,</span>\n      author<span class=\"token operator\">:</span> <span class=\"token string\">\"Camille Fournier\"</span><span class=\"token punctuation\">,</span>\n      cover<span class=\"token operator\">:</span> <span class=\"token string\">\"https://images.gr-assets.com/books/1484107737l/33369254.jpg\"</span><span class=\"token punctuation\">,</span>\n      status<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"Calculus, Better Explained\"</span><span class=\"token punctuation\">,</span>\n      isbn<span class=\"token operator\">:</span> <span class=\"token string\">\"9781470070700\"</span><span class=\"token punctuation\">,</span>\n      author<span class=\"token operator\">:</span> <span class=\"token string\">\"Kalid Azad\"</span><span class=\"token punctuation\">,</span>\n      cover<span class=\"token operator\">:</span> <span class=\"token string\">\"https://images.gr-assets.com/books/1448590460l/27993945.jpg\"</span><span class=\"token punctuation\">,</span>\n      status<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>and want to create <code class=\"language-text\">this.state.books.length</code> - as a number - <code class=\"language-text\">Book</code> components each have props from the <code class=\"language-text\">books</code> array of the <code class=\"language-text\">Library</code> component's state. We have to deal with the two components.</p>\n<p><strong>First</strong> with the parent, we have to create the <code class=\"language-text\">Book</code> component <code class=\"language-text\">this.state.books.length</code> - as a number - times, and pass our diffrent values to them Like this:</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Library/Library.jsx\">Full Code here</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_book<span class=\"token punctuation\">,</span> _id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Book\n        handleCounter<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleCounter<span class=\"token punctuation\">}</span>\n        key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_id<span class=\"token punctuation\">}</span>\n        id<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_book<span class=\"token punctuation\">.</span>isbn<span class=\"token punctuation\">}</span>\n        name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_book<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span>\n        isbn<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_book<span class=\"token punctuation\">.</span>isbn<span class=\"token punctuation\">}</span>\n        author<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_book<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span>\n        cover<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_book<span class=\"token punctuation\">.</span>cover<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><em>Note</em> ignore <code class=\"language-text\">handleCounter</code> for now.</p>\n<p><strong>Second</strong> with the child <code class=\"language-text\">Book</code>, we have the values from parent, let's use them:</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Book/Book.jsx\">Full code here</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">...</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token operator\">&lt;</span>Card<span class=\"token operator\">></span>\n\t\t\t<span class=\"token operator\">&lt;</span>Image\n\t\t\t\tsrc<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>cover<span class=\"token punctuation\">}</span>\n    \t\t\talt<span class=\"token operator\">=</span><span class=\"token string\">\"Book cover\"</span>\n<span class=\"token operator\">...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Until now we created 3 <code class=\"language-text\">Book</code> components from the parent component <code class=\"language-text\">Library</code>, and set their values from the parent state.\nEasy! Right?\nGreat, let's begin the second part</p>\n<h2>Passing state from child to parent</h2>\n<p>In this section, we want to handle the number of books you read by checking on each book checkbox.</p>\n<p>In our <code class=\"language-text\">Book</code> we have this state</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Book/Book.jsx\">Full code here</a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  status<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  id<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><em>Note</em> don't forget to pass <code class=\"language-text\">props</code> to component's constructor.</p>\n<p><code class=\"language-text\">status</code> means if you read this book or not, and its default value is <code class=\"language-text\">false</code>, <code class=\"language-text\">id</code> is the id of this book and i set it by book id like we learned in the previous section.</p>\n<p>we need to handle change of this status then update the books array in the parent state.</p>\n<p>In our <code class=\"language-text\">Book</code> component, we'll add a checkbox that recieve the change of the book status and pass <code class=\"language-text\">this.handleChange</code> to its <code class=\"language-text\">onChange</code> event like this:</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Book/Book.jsx\">Full code here</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"checkbox\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"example\"</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>you need to bind the function first, then update the <code class=\"language-text\">Book</code> state with the new status, after updating the child state we'll update the state of the parent <code class=\"language-text\">Library</code> like this:</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Book/Book.jsx\">Full code here</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>status<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>updateLibraryCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">updateLibraryCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">handleCounter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>In <code class=\"language-text\">updateLibraryCount</code> we used <code class=\"language-text\">handleCounter</code> function of the <code class=\"language-text\">Library</code> as a prop, then passed the <code class=\"language-text\">Book</code> state to it, Now the <code class=\"language-text\">Library</code> sees the <code class=\"language-text\">Book</code> state, Great! let's use it.</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Library/Library.jsx\">Full Code here</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token function\">handleCounter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_State</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//Get the index of this book by searching by its unique isbn</span>\n        <span class=\"token keyword\">const</span> ObjNum <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token parameter\">_book</span> <span class=\"token operator\">=></span> _book<span class=\"token punctuation\">.</span>isbn <span class=\"token operator\">===</span> _State<span class=\"token punctuation\">.</span>id\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//then update its value in the Library component</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\tbooks<span class=\"token operator\">:</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>\n\t\t\t\t\tObjNum<span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">[</span>ObjNum<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> status<span class=\"token operator\">:</span> _State<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>books\n\t\t\t\t<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">//this is a callback to handle the new change of the book status</span>\n\t\t\t\t<span class=\"token comment\">//and increment the reads</span>\n\t\t\t\t<span class=\"token keyword\">const</span> _read <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_book</span> <span class=\"token operator\">=></span>\n\t\t\t\t\t_book<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span>\n\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>reads<span class=\"token operator\">:</span> _read<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>I hope you're understand how to pass the state from the parent to child and vice versa, Here's the <a href=\"https://github.com/zeyadetman/howmanybooks\">full code</a>, and this is the <a href=\"https://zeyadetman.github.io/projects/2018/07/25/How-to-pass-state-between-components-in-reactjs.html\">original post on my blog</a>. If you have questions, feel free to ask in comments or <a href=\"zeyadetman@gmail.com\">email</a>.</p>","fields":{"slug":"/blog/posts/How-to-pass-state-between-components-in-reactjs/"},"frontmatter":{"date":"July 25, 2018","title":"How to pass state between components in reactjs (Full Code)","toArabic":null},"timeToRead":4,"wordCount":{"words":401}}},"pageContext":{"slug":"/blog/posts/How-to-pass-state-between-components-in-reactjs/","toArabic":null}}}